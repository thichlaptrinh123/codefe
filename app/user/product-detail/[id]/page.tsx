'use client';

import { useState } from 'react';
import Image from 'next/image';
import { Star, ShoppingCart, Truck, RotateCcw, HeadphonesIcon, X } from 'lucide-react';
import './product-detail.css';

const ProductDetail = ({ params }: { params: { id: string } }) => {
  const [selectedImage, setSelectedImage] = useState(0);
  const [selectedColor, setSelectedColor] = useState(0);
  const [selectedSize, setSelectedSize] = useState('M');
  const [quantity, setQuantity] = useState(1);
  const [showReviews, setShowReviews] = useState(false);
  const [showSizeGuide, setShowSizeGuide] = useState(false);

const productImages = [
  '/images/a1.jpeg',
  '/images/a1.jpeg',
  '/images/a1.jpeg',
  '/images/a1.jpeg'
];

  const colors = [
    { name: 'N√¢u', value: '#8B4513' },
    { name: 'ƒêen', value: '#000000' },
    { name: 'Tr·∫Øng', value: '#FFFFFF' }
  ];

  const sizes = ['S', 'M', 'L', 'XL', 'XXL'];

  const reviews = [
    {
      id: 1,
      name: 'Nguy·ªÖn Thanh Qu√Ω',
      rating: 4.5,
      date: '28/05/2025',
      comment: '√Åo ƒë·∫πp v∆∞·ª£t mong ƒë·ª£i! Ch·∫•t v·∫£i m·ªÅm, m·ªãn, m·∫∑c r·∫•t tho·∫£i m√°i. M√†u s·∫Øc y h√¨nh, giao h√†ng c≈©ng nhanh ch√≥ng. S·∫Ω ·ªßng h·ªô shop th√™m nhi·ªÅu l·∫ßn n·ªØa!'
    },
    {
      id: 2,
      name: 'Tr·∫ßn VƒÉn An',
      rating: 5,
      date: '25/05/2025',
      comment: 'Ch·∫•t l∆∞·ª£ng tuy·ªát v·ªùi, form √°o ƒë·∫πp, v·∫£i cotton m·ªÅm m·∫°i. ƒê√≥ng g√≥i c·∫©n th·∫≠n, giao h√†ng nhanh.'
    },
    {
      id: 3,
      name: 'L√™ Th·ªã Mai',
      rating: 4,
      date: '22/05/2025',
      comment: '√Åo ƒë·∫πp, ch·∫•t v·∫£i ok, nh∆∞ng m√†u h∆°i ƒë·∫≠m h∆°n trong h√¨nh m·ªôt ch√∫t. Nh√¨n chung v·∫´n h√†i l√≤ng.'
    }
  ];

  const renderStars = (rating: number) => {
    const fullStars = Math.floor(rating);
    const hasHalfStar = rating % 1 !== 0;
    const stars = [];

    for (let i = 0; i < 5; i++) {
      if (i < fullStars) {
        stars.push(<Star key={i} className="star-filled" size={16} />);
      } else if (i === fullStars && hasHalfStar) {
        stars.push(<Star key={i} className="star-half" size={16} />);
      } else {
        stars.push(<Star key={i} className="star-empty" size={16} />);
      }
    }
    return stars;
  };

  const handleQuantityChange = (type: 'increase' | 'decrease') => {
    if (type === 'increase') {
      setQuantity(prev => prev + 1);
    } else if (type === 'decrease' && quantity > 1) {
      setQuantity(prev => prev - 1);
    }
  };

  return (
    <div className="product-detail-container">
      <div className="breadcrumb">
        <span>Trang ch·ªß</span>
        <span>/</span>
        <span>√Åo thun Nam</span>
        <span>/</span>
        <span>N·ªØ</span>
        <span>/</span>
        <span>√Åo Thun Seventy Seven 42 N√¢u</span>
      </div>

      <div className="product-detail-content">
        {/* Product Images */}
        <div className="product-images">
          <div className="thumbnail-list">
            {productImages.map((img, index) => (
              <div
                key={index}
                className={`thumbnail ${selectedImage === index ? 'active' : ''}`}
                onClick={() => setSelectedImage(index)}
              >
                <Image src={img} alt={`Product ${index + 1}`} width={80} height={100} />
              </div>
            ))}
          </div>
          <div className="main-image">
            <Image
              src={productImages[selectedImage]}
              alt="Product"
              width={500}
              height={600}
              className="product-main-img"
            />
            <div className="expand-icon">‚õ∂</div>

          </div>
        </div>

        {/* Product Info */}
        <div className="product-info">
          <h1 className="product-title">√Åo Thun Seventy Seven 42 N√¢u</h1>
          <div className="product-meta">
            <span className="sold-count">ƒê√£ b√°n ƒë∆∞·ª£c: 996 s·∫£n ph·∫©m</span>
          </div>

          <div className="price-section">
            <span className="current-price">177.000VNƒê</span>
            <span className="original-price">249.000VNƒê</span>
          </div>

          <div className="product-details">
            <h3>M√¥ t·∫£:</h3>
            <div className="description-list">
              <p>1. Ki·ªÉu s·∫£n ph·∫©m: √Åo thun c√≥ tr√≤n tay ng·∫Øn ƒë√°ng v·ª´a</p>
              <p>2. ∆Øu ƒëi·ªÉm:</p>
              <ul>
                <li>- Thi·∫øt k·∫ø ƒë∆°n gi·∫£n v√† tinh t·∫ø mang phong c√°ch t·ªëi gi·∫£n.</li>
                <li>- M√†u s·∫Øc trung t√≠nh d·ªÖ d√†ng k·∫øt h·ª£p v·ªõi nhi·ªÅu trang ph·ª•c kh√°c nhau.</li>
                <li>- Logo nh·ªè tinh t·∫ø</li>
                <li>- Ch·∫•t li·ªáu tho·∫£i m√°i v√† tho·∫£i tho·∫£ khi m·∫∑c ph√π h·ª£p cho vi·ªác m·∫∑c h√†ng ng√†y...</li>
              </ul>
            </div>
          </div>

          {/* Color Selection */}
          <div className="color-selection">
            <label>M√†u s·∫Øc:</label>
            <div className="color-options">
              {colors.map((color, index) => (
                <div
                  key={index}
                  className={`color-option ${selectedColor === index ? 'selected' : ''}`}
                  onClick={() => setSelectedColor(index)}
                >
                  <div
                    className="color-circle"
                    style={{ backgroundColor: color.value }}
                  ></div>
                </div>
              ))}
            </div>
          </div>

          {/* Size Selection */}
          <div className="size-selection">
            <label>Size:</label>
            <div className="size-options">
              {sizes.map((size) => (
                <button
                  key={size}
                  className={`size-option ${selectedSize === size ? 'selected' : ''}`}
                  onClick={() => setSelectedSize(size)}
                >
                  {size}
                </button>
              ))}
                <button 
                    className="size-guide-btn"
                    onClick={() => setShowSizeGuide(true)}
                    >
                    üìè H∆∞·ªõng d·∫´n ch·ªçn size
                </button>
            </div>
          </div>

          {/* Quantity */}
          <div className="quantity-section">
            <label>S·ªë l∆∞·ª£ng:</label>
            <div className="quantity-controls">
              <button
                className="quantity-btn"
                onClick={() => handleQuantityChange('decrease')}
                disabled={quantity <= 1}
              >
                -
              </button>
              <span className="quantity-value">{quantity}</span>
              <button
                className="quantity-btn"
                onClick={() => handleQuantityChange('increase')}
              >
                +
              </button>
            </div>
            <span className="stock-info">C√≤n l·∫°i: 84 s·∫£n ph·∫©m</span>
          </div>

          {/* Action Buttons */}
          <div className="action-buttons">
            <button className="add-to-cart-btn">
              <ShoppingCart size={18} />
              Th√™m v√†o gi·ªè h√†ng
            </button>
            <button className="buy-now-btn">
              ‚ö° Mua ngay
            </button>
          </div>

          {/* Service Info */}
          <div className="service-info">
            <div className="service-item">
              <Truck className="service-icon" />
              <div>
                <h4>MI·ªÑN PH√ç V·∫¨N CHUY·ªÇN</h4>
                <p>√Åp d·ª•ng cho ƒë∆°n h√†ng t·ª´ 299.000VNƒê</p>
              </div>
            </div>
            <div className="service-item">
              <RotateCcw className="service-icon" />
              <div>
                <h4>HO√ÄN TI·ªÄN 100%</h4>
                <p>ƒê·ªïi tr·∫£ mi·ªÖn ph√≠ n·∫øu s·∫£n ph·∫©m b·ªã ng·ªôc h∆∞ h·ªèng</p>
              </div>
            </div>
            <div className="service-item">
              <HeadphonesIcon className="service-icon" />
              <div>
                <h4>H·ªñ TR·ª¢ KH√ÅCH H√ÄNG 24/7</h4>
                <p>Lu√¥n s·∫µn s√†ng l·∫Øng nghe & h·ªó tr·ª£ m·ªçi th·∫Øc m·∫Øc</p>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Reviews Section */}
      <div className="reviews-section">
        <h2>ƒê√°nh gi√° c·ªßa s·∫£n ph·∫©m</h2>
        <div className="reviews-summary">
          <div className="rating-overview">
            <div className="rating-score">4.8/5</div>
            <div className="rating-stars">
              {renderStars(4.8)}
            </div>
            <div className="rating-count">(23 ƒë√°nh gi√°)</div>
          </div>
          <div className="rating-breakdown">
            <div className="rating-bar">
              <span>5 sao (22)</span>
              <div className="bar"><div className="fill" style={{width: '95%'}}></div></div>
            </div>
            <div className="rating-bar">
              <span>4 sao (0)</span>
              <div className="bar"><div className="fill" style={{width: '0%'}}></div></div>
            </div>
            <div className="rating-bar">
              <span>3 sao (1)</span>
              <div className="bar"><div className="fill" style={{width: '5%'}}></div></div>
            </div>
            <div className="rating-bar">
              <span>2 sao (0)</span>
              <div className="bar"><div className="fill" style={{width: '0%'}}></div></div>
            </div>
            <div className="rating-bar">
              <span>1 sao (0)</span>
              <div className="bar"><div className="fill" style={{width: '0%'}}></div></div>
            </div>
          </div>
        </div>

        <button 
          className="view-all-reviews"
          onClick={() => setShowReviews(true)}
        >
          T·∫•t c·∫£ (23 ƒë√°nh gi√°)
        </button>

        <div className="reviews-preview">
          {reviews.slice(0, 2).map((review) => (
            <div key={review.id} className="review-item">
              <div className="review-header">
                <div className="reviewer-info">
                  <span className="reviewer-name">{review.name}</span>
                  <div className="review-rating">
                    {renderStars(review.rating)}
                  </div>
                </div>
                <span className="review-date">{review.date}</span>
              </div>
              <p className="review-comment">{review.comment}</p>
              <div className="review-images">
                <div className="review-image">
                  <Image src="/api/placeholder/80/80" alt="Review" width={80} height={80} />
                </div>
                <div className="review-image">
                  <Image src="/api/placeholder/80/80" alt="Review" width={80} height={80} />
                </div>
                <div className="review-image">
                  <Image src="/api/placeholder/80/80" alt="Review" width={80} height={80} />
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>

      {/* Reviews Modal */}
      {showReviews && (
        <div className="modal-overlay" onClick={() => setShowReviews(false)}>
          <div className="modal-content reviews-modal" onClick={(e) => e.stopPropagation()}>
            <div className="modal-header">
              <h2>ƒê√°nh gi√° t·ª´ ng∆∞·ªùi mua</h2>
              <button className="close-btn" onClick={() => setShowReviews(false)}>
                <X size={24} />
              </button>
            </div>
            <div className="modal-body">
              <div className="reviews-summary">
                <div className="rating-overview">
                  <div className="rating-score">4.8/5</div>
                  <div className="rating-stars">
                    {renderStars(4.8)}
                  </div>
                  <div className="rating-count">(23 ƒë√°nh gi√°)</div>
                </div>
                <div className="rating-breakdown">
                  <div className="rating-bar">
                    <span>5 sao (22)</span>
                    <div className="bar"><div className="fill" style={{width: '95%'}}></div></div>
                  </div>
                  <div className="rating-bar">
                    <span>4 sao (0)</span>
                    <div className="bar"><div className="fill" style={{width: '0%'}}></div></div>
                  </div>
                  <div className="rating-bar">
                    <span>3 sao (1)</span>
                    <div className="bar"><div className="fill" style={{width: '5%'}}></div></div>
                  </div>
                  <div className="rating-bar">
                    <span>2 sao (0)</span>
                    <div className="bar"><div className="fill" style={{width: '0%'}}></div></div>
                  </div>
                  <div className="rating-bar">
                    <span>1 sao (0)</span>
                    <div className="bar"><div className="fill" style={{width: '0%'}}></div></div>
                  </div>
                </div>
              </div>
              <div className="all-reviews">
                {reviews.map((review) => (
                  <div key={review.id} className="review-item">
                    <div className="review-header">
                      <div className="reviewer-info">
                        <span className="reviewer-name">{review.name}</span>
                        <div className="review-rating">
                          {renderStars(review.rating)}
                        </div>
                      </div>
                      <span className="review-date">{review.date}</span>
                    </div>
                    <p className="review-comment">{review.comment}</p>
                    <div className="review-images">
                      <div className="review-image">
                        <Image src="/api/placeholder/80/80" alt="Review" width={80} height={80} />
                      </div>
                      <div className="review-image">
                        <Image src="/api/placeholder/80/80" alt="Review" width={80} height={80} />
                      </div>
                      <div className="review-image">
                        <Image src="/api/placeholder/80/80" alt="Review" width={80} height={80} />
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>
        </div>
      )}

      {/* Size Guide Modal */}
      {showSizeGuide && (
        <div className="modal-overlay" onClick={() => setShowSizeGuide(false)}>
          <div className="modal-content size-guide-modal" onClick={(e) => e.stopPropagation()}>
            <div className="modal-header">
              <h2>H∆∞·ªõng d·∫´n ch·ªçn size</h2>
              <button className="close-btn" onClick={() => setShowSizeGuide(false)}>
                <X size={24} />
              </button>
            </div>
            <div className="modal-body">
              <div className="size-guide-image">
                {/* Placeholder for size guide image - user will replace this */}
                <Image 
                  src="/api/placeholder/600/400" 
                  alt="Size Guide" 
                  width={600} 
                  height={400}
                  className="size-guide-img"
                />
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default ProductDetail;